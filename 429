class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
    	if(!root)	return {};
        vector<vector<int>> res;
    	queue<Node*> q{{root}};
    	while(!q.empty()){
    		vector<int> v;
    		for(int i = q.size(); i > 0; --i){
    			Node *t = q.front();
    			q.pop();
    			v.push_back(t->val);
    			if(!t->children.empty()){
    				for(auto a: t->children){
    					q.push(a);
					}
				}
			}
			res.push_back(v);
		}
		return res;
    }
};
